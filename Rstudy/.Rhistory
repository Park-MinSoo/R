p <- ggplot(mpg, aes(x=displ, y=hwy,  color= manufacturer))+geom_point()
ggplotly(p)
# 선 색상 및 두께 설정
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company,colour=company))
# 선의 종류 :  0 = blank, 1 = solid, 2 = dashed, 3 = dotted, 4 = dotdash, 5 = longdash, 6 = twodash
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company,colour=company), linetype = 3)
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company,colour=company), linetype = "dotdash")
ggplot(mpg, aes(x=cty, y=hwy)) + geom_line(size=2, aes(group=company,colour=company), linetype = 3)
mpg <- as.data.frame(ggplot2::mpg)
midwest <- as.data.frame(ggplot2::midwest)
ggplot(mpg, aes(x=cty, y=hwy)) + geom_line(size=2, aes(group=company,colour=company), linetype = 3)
ggplot(mpg, aes(x=cty, y=hwy)) + geom_line(size=2, aes(group=cty,colour=cty), linetype = 3)
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_gray()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_bw()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_linedraw()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_light()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_dark()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_minimal()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_classic()
# 빈도 막대 그래프
ggplot(data = mpg, aes(x = drv)) + geom_bar()
# 선 그래프
ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()
# 상자 그림
ggplot(data = mpg, aes(x = drv, y = hwy)) + geom_boxplot()
ggplot(airquality, aes(x=Day, y=Temp))
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point()
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point(size=3, color="red")
ggplot(airquality, aes(x=Day, y=Temp)) + geom_point()
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(size=3, color="blue")
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(size=1, color="blue")
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(size=2, color="blue")
# 빈도 막대 그래프
ggplot(data = mpg, aes(x = drv)) + geom_bar()
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(width=0.5)
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(aes(fill=factor(gear)), alpha=1.0)
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(aes(fill=factor(gear))) + coord_polar()
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(aes(fill=factor(gear))) + coord_polar(theta='y')
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(aes(fill=factor(gear)), alpha=1.0)
#문제 2
ggplot(mpg, aes(x=factor(class))) + geom_bar(aes(fill=factor(gear)), alpha=1.0)
#문제 2
ggplot(mpg, aes(x=factor(class))) + geom_bar(aes(fill=factor(drv)), alpha=1.0)
#문제 2
ggplot(mpg, aes(x=factor(class))) + geom_bar(aes(fill=drv), alpha=1.0)
#문제 2
ggplot(mpg, aes(x=class)) + geom_bar(aes(fill=drv), alpha=1.0)
#문제 1
ggplot(mpg, aes(x=cty, y=hwy)) + geom_point(size=2, color="blue")
ggsave("result1.png")
#문제 2
ggplot(mpg, aes(x=class)) + geom_bar(aes(fill=drv), alpha=1.0)
ggsave("result2.png")
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1)
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(ylim=c(2500, 10000))
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(2500, 10000))
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(2500, 10000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(2500, 10000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000), ylim=c(2500, 10000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(ylim=c(2500, 10000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(ylim=c(2500, 10000), xlim=c(0, 50000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(ylim=c(2500, 10000), xlim=c(0, 500000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(ylim=c(2500, 10000), xlim=c(0, 5000000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(ylim=c(2500, 10000), xlim=c(0, 500000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian( xlim=c(0, 500000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000)) + coord_cartesian(ylim=c(2500, 10000))
?coord_cartesian
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(2500, 10000),clip="on")
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(2500, 10000),clip="off")
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(2500, 10000),clip="on")
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(2500, 10000),clip="on")
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(0, 10000))
#문제 3
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(0, 10000))
ggsave("result3.png")
#문제 3
options(scipen = 99)
ggplot(midwest, aes(x=poptotal, y=popasian)) + geom_point(size=1) + coord_cartesian(xlim=c(0, 500000),ylim=c(0, 10000))
ggsave("result3.png")
#문제 4
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
class$compact
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(aes(fill=factor(gear))) + coord_polar()
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(aes(fill=factor(gear))) + coord_polar(theta='y')
ggplot(airquality, aes(x=Day, y=Temp, group=Day)) + geom_boxplot() # 박스플롯 그리는 예제
ggplot(airquality, aes(Temp)) + geom_histogram()
ggplot(bar_data, aes(x=bloodType)) + geom_bar()
ggplot(classDF, aes(x=bloodType)) + geom_bar(aes(fill=gender))
ggplot(bar_data, aes(x=bloodType)) + geom_bar()
ggplot(classDF, aes(x=bloodType)) + geom_bar(aes(fill=gender))
ggplot(data = mpg, aes(x = class("compact", "subcompact","suv"), y = cty)) + geom_boxplot()
ggplot(data = mpg, aes(x = class("compact", "subcompact","suv"), y = cty)) + geom_boxplot()
ggplot(data = mpg, aes(x = class y = cty)) + geom_boxplot()
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
mpg$class <- c("compact", "subcompact","suv")
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
mpg$class <- c("compact", "subcompact","suv")
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
mpg <- as.data.frame(ggplot2::mpg)
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
mpg$class <- filter("compact", "subcompact","suv")
#문제 4
mpg$class <- filter("compact", "subcompact","suv")
#문제 4
class <- mpg %>%  filter("compact", "subcompact","suv")
#문제 4
mpg %>%  filter("compact", "subcompact","suv")
#문제 4
mpg %>%  filter(class=="compact"| class=="subcompact"|class=="suv")
#문제 4
class<-mpg %>%  filter(class=="compact"| class=="subcompact"|class=="suv")
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
class<-mpg %>%  filter(class=="compact"| class=="subcompact"|class=="suv")
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
class <- c("compact", "subcompact","suv")
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
class <- c("compact", "subcompact","suv")
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
class <- mpg$calss("compact", "subcompact","suv")
#문제 4
class <- mpg$calss("compact", "subcompact","suv")
#문제 4
class <- mpg$class("compact", "subcompact","suv")
#문제 4
class <- mpg$class("compact", "subcompact","suv")
#문제 4
<- mpg$class("compact", "subcompact","suv")
#문제 4
mpg$class("compact", "subcompact","suv")
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot("compact", "subcompact","suv")
?aes
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
?aes
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
# 라인차트 생성 - x축은 연도(year), y축은 매출(sales) 매칭
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line()
# 이번에는 데이터를 그룹화 하여 그려준다.
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(aes(group=company))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(class="compact"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(class="compact"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact", "subcompact","suv"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact", "subcompact","suv"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact" & "subcompact" & "suv"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact" | "subcompact" | "suv"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact" , x= "subcompact",x="suv"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact" , x= "subcompact",x="suv"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact" & x= "subcompact"& x="suv"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact")
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact"))
ggplot(data = mpg, aes(x = "subcompact", y = cty)) + geom_boxplot(aes(x="compact"))
class
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact,subcompact,suv"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot(aes(x="compact"))
ggplot(data = mpg, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
View(mpg)
#문제 4
class <- filter(class=="compact" | class=="subcompact" | class="suv")
#문제 4
mpg %>%  filter(class=="compact" | class=="subcompact" | class="suv")
#문제 4
mpg %>% filter(class=="compact" | class=="subcompact" | class="suv")
#문제 4
mpg %>% filter(class=="compact" | class=="subcompact" | class="suv")
mpg <- as.data.frame(ggplot2::mpg)
#문제 4
mpg %>% filter(class=="compact" | class=="subcompact" | class="suv")
#문제 4
mpg %>% filter(class=="compact" | class=="subcompact" | class="suv")
#문제 4
mpg %>% filter(class=="compact" | class=="subcompact" | class=="suv")
#문제 4
ctt <- mpg %>% filter(class=="compact" | class=="subcompact" | class=="suv")
#class <- mpg$class("compact", "subcompact","suv")
ggplot(data = mpg, aes(x = ctt, y = cty)) + geom_boxplot()
#class <- mpg$class("compact", "subcompact","suv")
ggplot(data = ctt, aes(x = class, y = cty)) + geom_boxplot()
#문제 4
ctt <- mpg %>% filter(class=="compact" | class=="subcompact" | class=="suv")
ggplot(data = ctt, aes(x = class, y = cty)) + geom_boxplot()
ggsave("result4.png")
#문제 5
log <- read("data/product_click.log")
#문제 5
log <- read.table("data/product_click.log")
View(log)
table(log)
table(log$v2)
table(log$v2)
#문제 5
log <- read.table("data/product_click.log")
table(log$v2)
table(log$V2)
click <- table(log$V2)
ggplot(mpg, aes(x=displ, y=hwy,  color= manufacturer))+geom_point() + scale_color_manual(values = rainbow(15))
#행 설정
ggplot(mpg, aes(x=displ, y=hwy,  color= manufacturer))+
geom_point()+guides(color = guide_legend(nrow = 6))
ggplot(mpg, aes(x=displ, y=hwy,  color= manufacturer))+geom_point()
ggplot(mpg, aes(x=displ, y=hwy,  color= manufacturer))+geom_point() + scale_color_manual(values = topo.colors(15))
#행 설정
ggplot(mpg, aes(x=displ, y=hwy,  color= manufacturer))+
geom_point()+guides(color = guide_legend(nrow = 6))
# ggplot으로 그래프 만들기
p <- ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point()
#geom_label을 이용하여 라벨을 달아준다.
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + geom_label(aes(label=weight))+coord_cartesian(ylim=c(60, 75))
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), colour="blue", stat="identity") + coord_cartesian(ylim=c(60, 75))
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(stat="identity") + ylim(60, 75) # 이러면 또 안된다.
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + coord_cartesian(ylim=c(60, 75))
click
ggplot(data=click, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
log
str(log)
ggplot(data=click, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
click <- as.data.frame(click)
click <- table(log$V2)
click <- as.data.frame(click)
click
ggplot(data=click, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
ggplot(data=click, aes(x=Var1, y=count)) + geom_bar(aes(fill=V2), stat="identity")
ggplot(data=click, aes(x=Var1, y=count)) + geom_bar(aes(fill=V2), stat="identity")
ggplot(data=click, aes(x=Var1, y=count)) + geom_bar(aes(fill=Var1), stat="identity")
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
count(log)
table(log)
#click <- table(log$V2)
#click <- as.data.frame(click)
ggplot(data=log$V2, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
#click <- table(log$V2)
#click <- as.data.frame(click)
ggplot(data=log$V2, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
click <- table(log$V2)
click
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=click)) + geom_bar(aes(fill=V2), stat="identity")
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=V1)) + geom_bar(aes(fill=V2), stat="identity")
click <- table(log$V2)
click
table(log)
log
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=table(V1))) + geom_bar(aes(fill=V2), stat="identity")
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=table(V1))) + geom_bar(aes(fill=V2), stat="identity")
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2))
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(stat="identity") + coord_cartesian(ylim=c(60, 75)) # y축의 범위를 줌
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(stat="identity") + ylim(60, 75) # 이러면 또 안된다.
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + coord_cartesian(ylim=c(60, 75))
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity") + coord_cartesian(ylim=c(60, 75))
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity") + coord_cartesian(ylim=c(0, 100))
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar()
#문제 5
log <- read.table("data/product_click.log")
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar()
ggplot(data=w, aes(x=year, y=weight)) + geom_bar() # 갯수를 세서 막대를 그리는게 기본이라..
ggplot(data=w, aes(x=year)) + geom_bar()
ggplot(data=w, aes(x=year, y=weight)) + geom_bar() # 갯수를 세서 막대를 그리는게 기본이라..
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(stat="identity")
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(stat="identity") + coord_cartesian(ylim=c(60, 75)) # y축의 범위를 줌
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(stat="identity") + ylim(60, 75) # 이러면 또 안된다.
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + coord_cartesian(ylim=c(60, 75))
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), colour="blue", stat="identity") + coord_cartesian(ylim=c(60, 75))
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=year), stat="identity")
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
click <- table(log$V2)
click
count <- table(log$V2)
count
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
#문제 5
log <- read.table("data/product_click.log")
click <- table(log$V2)
click
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
rm(count)
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
#문제 5
log <- read.table("data/product_click.log")
View(log)
click <- table(log$V2)
click
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=count)) + geom_bar(aes(fill=V2), stat="identity")
#click <- as.data.frame(click)
ggplot(data=log, aes(x=V2, y=V1)) + geom_bar(aes(fill=V2), stat="identity")
count <- table(log$V2)
count
count <- as.data.frame(count)
count
ggplot(data=count, aes(x=Var1, y=Freq)) + geom_bar(aes(fill=Var1), stat="identity")
ggplot(data=count, aes(x=Var1, y=Freq)) + geom_bar(aes(fill=Var1), stat="identity") +
labs(x="V2", y="count")
#geom_label을 이용하여 라벨을 달아준다.
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + geom_label(aes(label=weight))+coord_cartesian(ylim=c(60, 75))
ggplot(data=count, aes(x=Var1, y=Freq)) + geom_bar(aes(fill=Var1), stat="identity") +
labs(x="V2", y="count")
ggplot(data=count, aes(x=Var1, y=Freq)) + geom_bar(aes(fill=Var1), stat="identity") +
labs(x="V2", y="count")
ggsave("result5.png")
log
log$V1
V1 <- log$V1
#이런식으로 매개변수 순서와 포맷을 지정해 줄 수 있다.
as.Date("2020,04,15", format="%Y,%m,%d")
format(today, "%Y년 %m월 %d일")
format(today, "%a") # 소문자 a는 '?'요일을 출력
format(today, "%A") # 대문자 A는 '?요일'을 출력
V1 <- log$V1
V1
V1
date <- substr("1","8",V1)
date <- substr(1,8,V1)
date
V1
?substr
V1
date <- substr(V1,1,8)
date
date5 <- substr(V1,1,8)
date5
# 추출한 로그 날짜로 포맷화
as.Date(date5, format="%Y%m%d")
# 추출한 로그 날짜로 포맷화
date55 <- as.Date(date5, format="%Y%m%d")
date55
# 해당요일 추출
format(date55, "%A")
# 해당요일 추출
dayday <- format(date55, "%A")
dayday
daynum <- as.data.frame(dayday)
daynum
table(daynum)
finday <- table(daynum)
finday <- as.data.frame(finday)
finday
ggplot(data=finday, aes(x=daynum, y=Freq)) + geom_bar(aes(fill=daynum), stat="identity")
#문제 6
log <- read.table("data/product_click.log")
V1 <- log$V1
V1
date5 <- substr(V1,1,8)
date5
# 추출한 로그 날짜로 포맷화
date55 <- as.Date(date5, format="%Y%m%d")
# 해당요일 추출
dayday <- format(date55, "%A")
dayday
day <- as.data.frame(dayday)
finday <- table(day)
finday <- as.data.frame(finday)
finday
ggplot(data=finday, aes(x=day, y=Freq)) + geom_bar(aes(fill=day), stat="identity") +     labs(x="요일", y="클릭수")
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(stat="identity")
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(stat="identity") + coord_cartesian(ylim=c(60, 75)) # y축의 범위를 줌
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(stat="identity") + ylim(60, 75) # 이러면 또 안된다.
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + coord_cartesian(ylim=c(60, 75))
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), colour="blue", stat="identity") + coord_cartesian(ylim=c(60, 75))
#geom_label을 이용하여 라벨을 달아준다.
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + geom_label(aes(label=weight))+coord_cartesian(ylim=c(60, 75))
#y값에 따라 라벨의 위치가 바뀐다.
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + geom_label(aes(label=weight), nudge_y=1)+coord_cartesian(ylim=c(60, 75))
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + geom_label(aes(label=weight), nudge_y=2)+coord_cartesian(ylim=c(60, 75))
ggplot(data=w, aes(x=year, y=weight)) + geom_bar(aes(fill=year), stat="identity") + geom_label(aes(label=weight), nudge_y=-1)+coord_cartesian(ylim=c(60, 75)) + labs(title = "테스트", subtitle="ggplot2 패키지를 이용한 시각화", x="년도", y="무게")
ggsave("ggplot_test.png") # 저장해준다.
ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point(shape=21, size=6)
ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point(shape=21, size=6, colour="blue")
ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point(shape=21, size=6, fill="blue")
ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point(shape=21, size=6, fill="blue", colour="pink")
ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point(colour="grey", shape=21, size=6)
# 가격별로 색이 그라데이션 되었다.
ggplot(Cars93, aes(x=Weight, y=MPG.highway, fill=Price)) + geom_point(colour="grey", shape=21, size=6)
ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point(colour="grey", shape=21, size=6, aes(fill=Price))
ggplot(Cars93, aes(x=Weight, y=MPG.highway, fill=Cylinders)) +  geom_point(colour="grey", shape=21, size=6)
ggplot(Cars93, aes(x=Weight, y=MPG.highway, fill=Cylinders)) +
geom_point(colour="grey", shape=21, size=6) +
scale_fill_brewer(palette="Oranges") # Oranges
ggplot(Cars93, aes(x=Weight, y=MPG.highway, fill=Cylinders)) +
geom_point(colour="grey", shape=21, size=6) +
scale_fill_brewer(palette="Reds") # Reds
ggplot(Cars93, aes(x=Weight, y=MPG.highway, fill=Cylinders)) +
geom_point(colour="grey", shape=21, size=6) +
scale_fill_brewer(palette="Blues") # Blues
ggplot(data=finday, aes(x=day, y=Freq)) + geom_bar(aes(fill=day), stat="identity") +     labs(x="요일", y="클릭수")
ggsave("result6.png")
ggplot(mpg, aes(x=displ, y=hwy,  color= manufacturer))+geom_point()
ggplot(mpg, aes(x=displ, y=hwy,  color= manufacturer))+geom_point() + scale_color_manual(values = rainbow(15))
# 선 색상 및 두께 설정
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company,colour=company))
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company,colour=company))+scale_colour_grey() # 이런식으로 색을 지정해 줄 수도 있다.
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company,colour=company))+scale_colour_hue() # 얘가 DEFAULT 이다.
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company,colour=company))+scale_colour_manual(values = c("orange", "green")) # 색을 직접 지정.
# 선의 종류 :  0 = blank, 1 = solid, 2 = dashed, 3 = dotted, 4 = dotdash, 5 = longdash, 6 = twodash
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company,colour=company), linetype = 3)
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company,colour=company), linetype = "dotdash")
# 점의 종류와 색상
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company, colour=company)) + geom_point(size=2, shape = 5)
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company, colour=company)) + geom_point(size=2, shape = '가')
ggplot(coSalesDF, aes(x=year, y=sales)) + geom_line(size=2, aes(group=company, colour=company)) + geom_point(size=2, shape = '가', colour = "Red")
ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point(shape=21, size=6)
ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point(shape=21, size=6, colour="blue")
ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point(shape=21, size=6, fill="blue")
# 배경에 산점도 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + coord_cartesian(xlim=c(3, 6)) # coord_cartesian은
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + coord_cartesian(xlim=c(3, 6), ylim=c(10, 30))
ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point() #구동방식별로 색상을 다르게 하고 있다.
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(aes(color=drv))
data(airquality)
str(airquality)
View(airquality)
ggplot(airquality, aes(x=Day, y=Temp)) + geom_line()
ggplot(airquality, aes(x=Day, y=Temp)) + geom_line() + geom_point()
ggplot(airquality, aes(x=Day, y=Temp)) + geom_line(color="green") + geom_point(size=3)
# 빈도 막대 그래프
ggplot(data = mpg, aes(x = drv)) + geom_bar()
# 선 그래프
ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()
# 상자 그림
ggplot(data = mpg, aes(x = drv, y = hwy)) + geom_boxplot()
str(mtcars)
?mtcars
ggplot(mtcars, aes(x=cyl)) + geom_bar()
ggplot(mtcars, aes(x=cyl)) + geom_bar(width=0.5)
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar()
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(width=0.5)
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(aes(fill=factor(gear)), alpha=1.0)
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(aes(fill=factor(gear))) + coord_polar()
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar(aes(fill=factor(gear))) + coord_polar(theta='y')
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_gray()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_bw()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_linedraw()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_light()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_light()
ggplot(mtcars, aes(x=gear))+geom_bar() + labs(x="기어수", y="자동차수", title="변속기 기어별 자동차수") + theme_linedraw()
ggplot(data=finday, aes(x=day, y=Freq)) + geom_bar(aes(fill=day), stat="identity") + labs(x="요일", y="클릭수") + + theme_linedraw()
ggplot(data=finday, aes(x=day, y=Freq)) + geom_bar(aes(fill=day), stat="identity") + labs(x="요일", y="클릭수") + + theme_linedraw()
ggplot(data=finday, aes(x=day, y=Freq)) + geom_bar(aes(fill=day), stat="identity") + labs(x="요일", y="클릭수") + theme_linedraw()
ggsave("result6.png")
GNI2014
data(GNI2014)
str(GNI2014)
View(GNI2014)
?treemap
# 트리맵 그리기
# index에 표현하고 싶은 계층 순서대로 벡터로 생성. product, region 순으로 벡터를 지정함으로써 product가 region보다 더 상위로 구분이 됨
treemap(sales_df, vSize="saleAmt", index=c("product", "region"), title="A기업 판매현황")
saleAmt
treemap(GNI2014, vSize="population", index=c("continent", "iso3"), title="전세계 인구 정보")
?treemap
treemap(GNI2014, vSize="population", index=c("continent", "iso3"), title="전세계 인구 정보", fontfamily.title	="휴먼옛체")
windowsFonts(lett=windowsFont("휴먼옛체"))
windowsFonts(lett=windowsFont("휴먼옛체"))
treemap(GNI2014, vSize="population", index=c("continent", "iso3"), title="전세계 인구 정보", fontfamily.title	="휴먼옛체")
windowsFonts(lett=windowsFont("휴먼옛체"))
?windowsFonts
treemap(GNI2014, vSize="population", index=c("continent", "iso3"), title="전세계 인구 정보", fontfamily.title	=lett)
treemap(GNI2014, vSize="population", index=c("continent", "iso3"), title="전세계 인구 정보", fontfamily.title	="lett")
png(filename="treemap.png",height = 400, width=700)
treemap(GNI2014, vSize="population", index=c("continent", "iso3"), title="전세계 인구 정보", fontfamily.title	="lett")
dev.off()
?treemap
treemap(GNI2014, vSize="population", index=c("continent", "iso3"), title="전세계 인구 정보", fontfamily.title	="lett", fontsize.title	=3)
treemap(GNI2014, vSize="population", index=c("continent", "iso3"), title="전세계 인구 정보", fontfamily.title	="lett", fontsize.title	=30)
png(filename="treemap.png",height = 400, width=700)
treemap(GNI2014, vSize="population", index=c("continent", "iso3"), title="전세계 인구 정보", fontfamily.title	="lett", fontsize.title	=30)
dev.off()
?windowsFonts
