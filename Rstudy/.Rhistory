install.packages("Rcpp")
# KoNLP 로드
library(KoNLP)
# 한번 수행하면 더 이상 수행할 필요가 없어용(오래 걸려)
useSystemDic()
useSejongDic()
useNIADic()
word_data <- readLines("book/애국가(가사).txt")
word_data
word_data2 <- sapply(word_data, extractNoun, USE.NAMES = F)
word_data2
word_data3 <- extractNoun(word_data)
word_data3
hotel <- readLines("data/hotel.txt")
hotel
word_data <- readLines("book/애국가(가사).txt")
word_data
word_data2 <- sapply(word_data, extractNoun, USE.NAMES = F)
word_data2
word_data3 <- extractNoun(word_data)
word_data3
?extractNoun
add_words <- c("백두산", "남산", "철갑", "가을", "달")
buildDictionary(user_dic=data.frame(add_words, rep("ncn", length(add_words))), replace_usr_dic=T)
word_data3 <- extractNoun(word_data)
word_data3
undata <- unlist(word_data3)
undata
word_table <- table(undata)
word_table
undata2 <- Filter(function(x) {nchar(x) >= 2}, undata)
word_table2 <- table(undata2)
word_table2
undata2 <- Filter(function(x) {nchar(x) >= 2}, undata)
word_table2 <- table(undata2)
word_table2
final <- sort(word_table2, decreasing = T)
head(final, 10)
extractNoun("대한민국의 영토는 한반도와 그 부속도서로 한다")
SimplePos22("대한민국의 영토는 한반도와 그 부속도서로 한다")
# ??
SimplePos09("대한민국의 영토는 한반도와 그 부속도서로 한다")
word_data
word_data3 <- extractNoun(word_data)
word_data3
# 워드 클라우드
install.packages("wordcloud")
library(wordcloud)
install.packages("wordcloud2")
library(wordcloud2)
(words <- read.csv("data/wc.csv",stringsAsFactors = F))
head(words)
windowsFonts(lett=windowsFont("휴먼옛체"))
wordcloud(words$keyword, words$freq,family="lett")
windowsFonts(lett=windowsFont("휴먼옛체"))
wordcloud(words$keyword, words$freq,family="lett")
wordcloud(words$keyword, words$freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7))
?windowsFonts
hotel <- readLines("data/hotel.txt")
hotel_n <- extractNoun(hotel)
undata <- unlist(hotel_n)
undata
word_table <- table(undata)
word_table
final <- sort(word_table, decreasing = T)
head(final, 10)
undata
gsub("[[:alpha:]]","",undata)
word_table <- table(undata)
word_table
final <- sort(word_table, decreasing = T)
head(final, 10)
undata
undata2 <- gsub("[[:alpha:]]","",undata)
word_table <- table(undata2)
word_table
final <- sort(word_table, decreasing = T)
head(final, 10)
hotel <- readLines("data/hotel.txt")
hotel_n <- extractNoun(hotel)
undata <- unlist(hotel_n)
undata
undata2 <- gsub("[[:alpha:]]","",undata)
word_table <- table(undata2)
word_table
final <- sort(word_table, decreasing = T)
head(final, 10)
undata <- unlist(hotel_n)
undata
word_table <- table(undata)
word_table
final <- sort(word_table, decreasing = T)
head(final, 10)
undata2 <- gsub("[[:alpha:]]","",undata)
undata
undata2 <- gsub("[[:alpha:]]","",undata)
undata2 <- gsub("[[:alpha:]]","",undata)
undata2
undata
undata2 <- gsub("[[:lower:]]","",undata)
undata2
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata3
word_table <- table(undata3)
word_table
final <- sort(word_table, decreasing = T)
head(final, 10)
undata
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata3 <- gsub("[[:punct:]]","",undata3)
undata4
word_table <- table(undata4)
word_table
final <- sort(word_table, decreasing = T)
head(final, 10)
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata3 <- gsub("[[:punct:]]","",undata3)
undata4
undata4
undata
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata4 <- gsub("[[:punct:]]","",undata3)
undata4
word_table <- table(undata4)
word_table
final <- sort(word_table, decreasing = T)
head(final, 10)
hotel <- readLines("data/hotel.txt")
hotel_n <- extractNoun(hotel)
undata <- unlist(hotel_n)
undata
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata4 <- gsub("[[:punct:]]","",undata3)
undata4
word_table <- table(undata4)
word_table
final <- sort(word_table, decreasing = T)
final <- head(final, 10)
write.csv(final,"hotel_top_word.csv")
final
undata4
hotel <- readLines("data/hotel.txt")
hotel_n <- extractNoun(hotel)
undata <- unlist(hotel_n)
undata
undata2 <- Filter(function(x) {nchar(x) >= 2}, undata)
undata3 <- gsub("[[:lower:]]","",undata2)
undata4 <- gsub("[[:upper:]]","",undata3)
undata5 <- gsub("[[:punct:]]","",undata4)
undata6 <- gsub("[[:punct:]]","",undata5)
undata6
word_table <- table(undata6)
word_table
final <- sort(word_table, decreasing = T)
final <- head(final, 10)
final
hotel <- readLines("data/hotel.txt")
hotel_n <- extractNoun(hotel)
undata <- unlist(hotel_n)
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata4 <- gsub("[[:punct:]]","",undata3)
undata5 <- gsub("[[:punct:]]","",undata4)
undata6 <- Filter(function(x) {nchar(x) >= 2}, undata5)
undata6
word_table <- table(undata6)
word_table
final <- sort(word_table, decreasing = T)
final <- head(final, 10)
final
write.csv(final,"hotel_top_word.csv")
gong <- readLines("data/공구.txt")
gong_n <- extractNoun(gong)
undata <- unlist(gong_n)
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata4 <- gsub("[[:punct:]]","",undata3)
undata5 <- Filter(function(x) {nchar(x) >= 2}, undata4)
undata5
gong <- readLines("data/공구.txt", encoding = "UTF-8")
gong_n <- extractNoun(gong)
undata <- unlist(gong_n)
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata4 <- gsub("[[:punct:]]","",undata3)
undata5 <- Filter(function(x) {nchar(x) >= 2}, undata4)
undata5
gong <- readLines("data/공구.txt", encoding = "UTF-8")
gong_n <- extractNoun(gong)
undata <- unlist(gong_n)
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata4 <- gsub("[[:punct:]]","",undata3)
undata5 <- gsub("[[:digit:]]","",undata4)
undata6 <- Filter(function(x) {nchar(x) >= 2}, undata5)
undata6
gong <- readLines("data/공구.txt", encoding = "UTF-8")
gong_n <- extractNoun(gong)
undata <- unlist(gong_n)
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata4 <- gsub("[[:punct:]]","",undata3)
undata5 <- gsub("[[:digit:]]","",undata4)
undata6 <- gsub("♥","",undata5)
undata7 <- gsub("공구.*","",undata6)
undata8 <- Filter(function(x) {nchar(x) >= 2}, undata7)
undata8
bindo <- table(undata8)
bindo
head(bindo)
sort(bindo)
sort(desc(bindo))
bindo <- table(undata8)
final <- sort(bindo, decreasing = T)
head(final)
gong <- readLines("data/공구.txt", encoding = "UTF-8")
gong_n <- extractNoun(gong)
undata <- unlist(gong_n)
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata4 <- gsub("[[:punct:]]","",undata3)
undata5 <- gsub("[[:digit:]]","",undata4)
undata6 <- gsub("♥","",undata5)
undata7 <- gsub("공구.*","",undata6)
undata8 <- gsub("해주.*","",undata7)
undata9 <- Filter(function(x) {nchar(x) >= 2}, undata8)
undata9
bindo <- table(undata9)
final <- sort(bindo, decreasing = T)
head(final)
gong9 <- as.data.frame(final)
gong9
View(gong9)
gong9
View(gong9)
windowsFonts(lett=windowsFont("휴먼옛체"))
wordcloud(gong9$undata9, gong9$Freq,family="lett")
wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7))
wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = T,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7))
wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7))
write(final,"wc.png")
windowsFonts(lett=windowsFont("휴먼옛체"))
wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
write(final,"wc.png")
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
dev.copy("wc.png",final)
dev.off()
dev.copy("wc.png",final)
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
?dev.copy()
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
windowsFonts(lett=windowsFont("휴먼옛체"))
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
windowsFonts(lett=windowsFont("휴먼옛체"))
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
dev.copy(final,"wc.png")
png("wc.png",width=4, height=4, units='in', res=300)
dev.off()
library(ggplot2)
dev.copy(final,"wc.png")
dev.copy("wc.png",final)
dev.copy("wc.png",final)
windowsFonts(lett=windowsFont("휴먼옛체"))
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
library(ggplot2)
png("wc.png",width=4, height=4, units='in', res=300)
dev.off()
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
library(ggplot2)
png("wc.png",width=500, height=500)
plot(final)dev.off()
png("wc.png",width=500, height=500)
windowsFonts(lett=windowsFont("휴먼옛체"))
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
png("wc.png",width=500, height=500)
plot(final)dev.off()
png("wc.png",width=500, height=500)
windowsFonts(lett=windowsFont("휴먼옛체"))
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
dev.off()
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),
family="lett")
final <- wordcloud(gong9$undata9, gong9$Freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7),random.color = T,
family="lett")
#######
wordcloud2(words, fontFamily = "휴먼옛체") #wordcloud2는 폰트를 직접 입력 할 수 있다.
wordcloud2(words,rotateRatio = 1)
wordcloud2(words,rotateRatio = 0.5)
wordcloud2(words,rotateRatio = 0)
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-dark", figPath="book/peace.png")
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-dark", figPath="book/peace.png")
wordcloud2(words,size=0.5,col="random-dark", figPath="book/peace.png")
wordcloud2(words,size=0.5,col="random-dark", figPath="book/peace.png")
wordcloud2(words,size=0.5,col="random-dark")
windowsFonts(lett=windowsFont("휴먼옛체"))
wordcloud(words$keyword, words$freq,family="lett")
wordcloud(words$keyword, words$freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7))
wordcloud2(words,rotateRatio = 1)
wordcloud2(words,rotateRatio = 0.5) # 반만 회전시켜달라
wordcloud2(words,rotateRatio = 0) #회전시키지 말라.
wordcloud2(words,size=0.5,col="random-dark")
wordcloud2(words,size=0.7,col="random-light",backgroundColor = "black")
wordcloud2(data = demoFreq)
wordcloud2(data = demoFreq, shape = 'diamond')
wordcloud2(data = demoFreq, shape = 'star')
wordcloud2(data = demoFreq)
wordcloud2(data = demoFreq, shape = 'diamond')
wordcloud2(data = demoFreq, shape = 'star')
wordcloud2(data = demoFreq, shape = 'cardioid')
wordcloud2(data = demoFreq, shape = 'triangle-forward')
wordcloud2(data = demoFreq, shape = 'triangle')
result<-wordcloud2(data = demoFreq, shape = 'pentagon')
result<-wordcloud2(data = demoFreq, shape = 'pentagon')
library("htmlwidgets")
saveWidget(result,"tmpwc.html",selfcontained = F)
head(demoFreq)
str(demoFreq)
wordcloud2(data = demoFreq)
result<-wordcloud2(data = demoFreq, shape = 'pentagon')
result
library("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
library("htmlwidgets")
saveWidget(result,"tmpwc.html",selfcontained = F)
library(htmlwidgets)
#같은 파일내에 폴더가 생성되며 그곳에 js , css등 전부 생성이되어 다 가져가서 사용하게 된다.
head(demoFreq)
str(demoFreq)
result<-wordcloud2(data = demoFreq, shape = 'pentagon')
#같은 파일내에 폴더가 생성되며 그곳에 js , css등 전부 생성이되어 다 가져가서 사용하게 된다.
head(demoFreq)
str(demoFreq)
library(htmlwidgets) # install.packages 에는 인용부호("")를 붙이고 library에는 인용부호를 붙이지 않는다.
#같은 파일내에 폴더가 생성되며 그곳에 js , css등 전부 생성이되어 다 가져가서 사용하게 된다.
head(demoFreq)
str(demoFreq)
#######
wordcloud2(words, fontFamily = "휴먼옛체") #wordcloud2는 폰트를 직접 입력 할 수 있다.
library(wordcloud2)
wordcloud(words$keyword, words$freq,family="lett")
library(wordcloud)
library(wordcloud2)
windowsFonts(lett=windowsFont("휴먼옛체"))
wordcloud(words$keyword, words$freq,family="lett")
wordcloud(words$keyword, words$freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.3, scale = c(4, 1),
colors = rainbow(7))
library(htmlwidgets) # install.packages 에는 인용부호("")를 붙이고 library에는 인용부호를 붙이지 않는다.
#같은 파일내에 폴더가 생성되며 그곳에 js , css등 전부 생성이되어 다 가져가서 사용하게 된다.
head(demoFreq)
str(demoFreq)
wordcloud2(data = demoFreq)
yes24 <- readLines("data/yes24.txt")
yes24 <- readLines("yes24.txt")
yes24_n <- extractNoun(yes24)
undata <- unlist(yes24_n)
yes24_n <- extractNoun(yes24)
yes24 <- readLines("yes24.txt")
yes24_n <- extractNoun(yes24)
yes24 <- readLines("yes24.txt")
yes24
yes24_n <- extractNoun(yes24)
# KoNLP 로드
library(KoNLP)
yes24_n <- extractNoun(yes24)
undata <- unlist(yes24_n)
undata2 <- gsub("[[:lower:]]","",undata)
undata3 <- gsub("[[:upper:]]","",undata2)
undata4 <- gsub("[[:punct:]]","",undata3)
undata5 <- gsub("[[:digit:]]","",undata4)
undata6 <- Filter(function(x) {nchar(x) >= 2 & nchar(x) <= 4}, undata5)
undata6
bindo <- table(undata6)
final <- sort(bindo, decreasing = T)
head(final)
result <- sort(bindo, decreasing = T)
head(result)
wordcloud2(result, fontFamily = "휴먼옛체")
wordcloud2(result,rotateRatio = 0.5)
wordcloud2(result, fontFamily = "휴먼옛체")
wordcloud2(result,size=0.5,col="random-dark")
wordcloud2(result, fontFamily = "휴먼옛체")
wordcloud2(data = demoFreq)
wordcloud2(result, fontFamily = "휴먼옛체")
saveWidget(result,"wc.html",title="WORDCLOUD2 실습",selfcontained = F)
library(htmlwidgets)
saveWidget(result,"wc.html",title="WORDCLOUD2 실습",selfcontained = F)
result
saveWidget(result,"wc.html",title="WORDCLOUD2 실습",selfcontained = F)
saveWidget(result,"wc.html",title="WORDCLOUD2 실습",selfcontained = F)
result <- sort(bindo, decreasing = T)
result <- as.data.frame(result)
saveWidget(result,"wc.html",title="WORDCLOUD2 실습",selfcontained = F)
bindo <- table(undata6)
result <- sort(bindo, decreasing = T)
saveWidget(result,"wc.html",title="WORDCLOUD2 실습",selfcontained = F)
bindo <- table(undata6)
result <- sort(bindo, decreasing = T)
result <- wordcloud2(result, fontFamily = "휴먼옛체")
saveWidget(result,"wc.html",title="WORDCLOUD2 실습",selfcontained = F)
