popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
install.packages("rgeos")
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
# 강남구 1인 가구 뽑기
k3@data$name<-gsub('·','',k3@data$name) # 동목록 에서 . 을 빼서 다시 담음
colnames(DONG)<-c('구별','name','일인가구') # DONG 칼럼명 재설정
dong <- DONG %>%filter(구별=='강남구')
dong
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
?merge
??merge
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
k3@data[c(67:81),]
DONG<-read.csv('data/one.csv')
k3 <- korpopmap3
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 강남구 1인 가구 뽑기
k3@data$name<-gsub('·','',k3@data$name) # 동목록 에서 . 을 빼서 다시 담음
colnames(DONG)<-c('구별','name','일인가구') # DONG 칼럼명 재설정
dong <- DONG %>%filter(구별=='강남구')
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
dong
k3@data
View(k3@data)
mymap <- k3@data
mymap
mymap <- k3@data
mymap
k3@data
k3@data
View(k3@data)
str(k3@data)
mypalette
dong
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
k3@data$'일인가구'
map7 <- NULL
map7<-leaflet(k3@data) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
map7 <- NULL
map7<-leaflet(k3$data) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
map7 <- NULL
map7<-leaflet(k3) %>%
filter(구별=="강남구")
map7 <- NULL
map7<-leaflet(k3) %>%
filter(구별=="강남구") %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7<-leaflet(k3) %>%
filter(구별=="강남구") %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
DONG<-read.csv('data/one.csv')
k3 <- korpopmap3
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 강남구 1인 가구 뽑기
k3@data$name<-gsub('·','',k3@data$name) # 동목록 에서 . 을 빼서 다시 담음
colnames(DONG)<-c('구별','name','일인가구') # DONG 칼럼명 재설정
dong <- DONG %>%filter(구별=='강남구')
dong <- DONG %>%filter(구별=='강남구')
dong
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
View(k3@data)
mymap <- k3@data
mymap
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
dong
View(k3@data)
# 강남구 1인 가구 뽑기
k3@polygons<-k3@polygons[c(67:81)]
k3@data$name<-gsub('·','',k3@data$name) # 동목록 에서 . 을 빼서 다시 담음
colnames(DONG)<-c('구별','name','일인가구') # DONG 칼럼명 재설정
dong <- DONG %>%filter(구별=='강남구')
dong
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
DONG<-read.csv('data/one.csv')
k3 <- korpopmap3
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
# 강남구 1인 가구 뽑기
k3@polygons<-k3@polygons[c(67:81)]
k3@data$name<-gsub('·','',k3@data$name) # 동목록 에서 . 을 빼서 다시 담음
colnames(DONG)<-c('구별','name','일인가구') # DONG 칼럼명 재설정
dong <- DONG %>%filter(구별=='강남구')
dong
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
View(k3@data)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
?k3@polygons
DONG<-read.csv('data/one.csv')
k3 <- korpopmap3
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
k3@data$name<-gsub('·','',k3@data$name) # 동목록 에서 . 을 빼서 다시 담음
colnames(DONG)<-c('구별','name','일인가구') # DONG 칼럼명 재설정
dong <- DONG %>%filter(구별=='강남구')
dong
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
View(k3@data)
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
k3 <- korpopmap3
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
View(k3@data)
k3@data$name<-gsub('·','',k3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong <- DONG %>%filter(구별=='광진구')
dong
DONG<-read.csv('data/one.csv')
k3 <- korpopmap3
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
View(k3@data)
k3@data$name<-gsub('·','',k3@data$name) # 동목록 에서 . 을 빼서 다시 담음
colnames(DONG)<-c('구별','name','일인가구') # DONG 칼럼명 재설정
dong <- DONG %>%filter(구별=='강남구')
dong
View(dong)
guname <- '강남구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
pattern <- paste0('^', gucode)
k3@data[grep(pattern, k3@data$code.data),
c("code.data", "name")]
k3@data[grep(pattern, k3@data$code.data),]
guname <- '강남구'
gucode <- k2@data[k2@data$name == guname, "code.data"]
pattern <- paste0('^', gucode)
ccco <- grep(pattern, k3@data$code.data)
k3@data[ccco,]
# 강남구 1인 가구 뽑기
k3@polygons<-k3@polygons[ccco]
k3@data$name<-gsub('·','',k3@data$name) # 동목록 에서 . 을 빼서 다시 담음
colnames(DONG)<-c('구별','name','일인가구') # DONG 칼럼명 재설정
dong <- DONG %>%filter(구별=='강남구')
dong
k3@data<-merge(k3@data,dong,by.x='name',sort=FALSE)
View(k3@data)
mymap <- k3@data
mypalette <- colorNumeric(palette ='Set3' , domain = k3@data$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',k3@data$'일인가구')
map7 <- NULL
map7<-leaflet(k3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
fillOpacity = .7,
popup = mypopup,
color = ~mypalette(k3@data$일인가구)) %>%
addLegend( values = ~k3@data$일인가구,
pal = mypalette ,
title = '인구수',
opacity = 1)
map7
saveWidget(map7, file="oneMap.html")
library(saveWidget)
library(saveWidget)
library(htmlwidgets)
saveWidget(map7, file="oneMap.html")
# R과 Oacle 연동
install.packages("DBI");
install.packages("RJDBC");
library(RJDBC)
library(DBI)
drv <- JDBC("oracle.jdbc.driver.OracleDriver","C:/unico/ojdbc6.jar")
conn <- dbConnect(drv,"jdbc:oracle:thin:@localhost:1521:xe","jdbctest","jdbctest")
conn
drv <- JDBC("oracle.jdbc.driver.OracleDriver","C:/unico/ojdbc6.jar")
library(RJDBC)
library(DBI)
drv <- JDBC("oracle.jdbc.driver.OracleDriver","C:/hardy/ojdbc6.jar")
conn <- dbConnect(drv,"jdbc:oracle:thin:@localhost:1521:xe","jdbctest","jdbctest")
conn
dbListTables(conn)
result1<-dbReadTable(conn,"VISITOR") # DB에서 table정보 dataframe으로 가져오기 - 테이블명 대문자!
result1
class(result1)
mode(result1)
result1<-dbReadTable(conn,"visitor")
result1
class(result1)
mode(result1)
result2 <- dbGetQuery(conn, "SELECT * FROM VISITOR")
result2
class(result2)
result3 <- dbSendQuery(conn, "SELECT * FROM VISITOR")
result3
class(result3)
ret1 <- dbFetch(result3, 1)
ret1
ret2 <- dbFetch(result3, 2)
ret2
result2 <- dbGetQuery(conn, "SELECT * FROM VISITOR")
result2
class(result2)
result3 <- dbSendQuery(conn, "SELECT * FROM VISITOR")
result3
class(result3)
ret1 <- dbFetch(result3, 1)
ret1
ret2 <- dbFetch(result3, 2)
ret2
class(result3)
result3
ret1 <- dbFetch(result3, 1)
ret1
ret2 <- dbFetch(result3, 2)
ret2
ret1 <- dbFetch(result3, 1)
ret1
ret2 <- dbFetch(result3, 2)
ret2
ret1 <- dbFetch(result3, 1)
ret1
ret2 <- dbFetch(result3, 2)
ret2
dbGetQuery(conn, "SELECT * FROM TAB")
dbGetQuery(conn, "SELECT * FROM TAB")
# 테이블에 데이터 저장하기
# 방법 1
dbWriteTable(conn,"book1",data.frame(bookname=c("자바의 정석","하둡 완벽 입문","이것이 리눅스다"),
price=c(30000,25000,32000)))
dbGetQuery(conn, "SELECT * FROM book1")
dbWriteTable(conn,"cars",head(cars,3))
dbGetQuery(conn, "SELECT * FROM cars")
result1<-dbReadTable(conn,"VISITOR") # DB에서 table정보 dataframe으로 가져오기
result1
#######################다양한 DB 연동 예제들##################################
# 예제 1
df <- read.table("data/product_click.log",stringsAsFactors = F)
head(df)
str(df)
names(df) <-c("click_time","pid")
df$click_time <- as.character(df$click_time)
dbWriteTable(conn,"productlog1",df)
result4 <-dbReadTable(conn,"PRODUCTLOG")
result4
df$click_time <- as.character(df$click_time)
dbWriteTable(conn,"productlog",df)
result4 <-dbReadTable(conn,"PRODUCTLOG")
result4
# 예제 2
dbWriteTable(conn,"mtcars",mtcars)
rs <- dbSendQuery(conn,"SELECT*FROM mtcars WHERE cyl=4")
rs
dbFetch(rs)
dbClearResult(rs)
rs <- dbSendQuery(conn,"SELECT*FROM mtcars")
ret1<- dbFetch(rs,10)
ret2<- dbFetch(rs)
dbClearResult(rs)
nrow(ret1)
nrow(ret2)
drv <- JDBC("oracle.jdbc.driver.OracleDriver","C:/hardy/ojdbc6.jar")
conn <- dbConnect(drv,"jdbc:oracle:thin:@localhost:1521:xe","jdbctest","jdbctest")
conn
IRIS<-dbGetQuery(conn,"SELECT SLENGTH, SWIDTH, PLENGTH, PWIDTH, SPECIES FROM IRIS")
IRIS
IRIS
iris
IRIs
IRIS
iris
View(iris)
str(iris)
colnames(iris)<-c('SLENGTH','SWIDTH','PLENGTH','PWIDTH', 'SPECIES')
View(iris)
iris
iris<-dbReadTable(conn,"iris")
iris
irisdb <-dbReadTable(conn,"iris")
irisdb
dbWriteTable(conn,"iris",iris)
iris<-dbGetQuery(conn,"SELECT SLENGTH, SWIDTH, PLENGTH, PWIDTH, SPECIES FROM iris")
drv <- JDBC("oracle.jdbc.driver.OracleDriver","C:/hardy/ojdbc6.jar")
conn <- dbConnect(drv,"jdbc:oracle:thin:@localhost:1521:xe","jdbctest","jdbctest")
conn
colnames(iris)<-c('SLENGTH','SWIDTH','PLENGTH','PWIDTH', 'SPECIES')
View(iris)
dbWriteTable(conn,"iris",iris)
irisdb <-dbReadTable(conn,"iris")
irisdb
?ggplot
??ggplot
ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point() #구동방식별로 색상을 다르게 하고 있다.
library(ggplot2)
library(dplyr)
mpg <- as.data.frame(ggplot2::mpg)
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + coord_cartesian(xlim=c(3, 6), ylim=c(10, 30))
ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point() #구동방식별로 색상을 다르게 하고 있다.
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(aes(color=drv))
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(aes(color=drv))
ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point() #구동방식별로 색상을 다르게 하고 있다.
# 시각화 구현
ggplot(data = irisdb, aes(x = SLENGTH, y = SWIDTH, col = SPECIES)) + geom_point()
ggplot(data = irisdb, aes(x = PLENGTH, y = PWIDTH, col = SPECIES)) + geom_point()
# 시각화 구현
ggplot(data = irisdb, aes(x = SLENGTH, y = SWIDTH, col = SPECIES)) + geom_point()
ggsave("db1.jpg")
ggplot(data = irisdb, aes(x = PLENGTH, y = PWIDTH, col = SPECIES)) + geom_point()
ggsave("db2.jpg")
install.packages("Rserve")
library(dplyr)
library(Rserve)
pdf <- read.table("data/product_click.log")
names(pdf) <- c("logdate", "product")
pdf <- pdf %>% select(product) %>% group_by(product) %>% summarise(clickcount = n()) %>% arrange(desc(clickcount)) %>% head(1)
pdf <- as.data.frame(pdf)
pdf
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
library(rJava)
library(wordcloud)
library(KoNLP)
library(rJava)
library(wordcloud)
library(KoNLP)
pdf <- read.table("C:/hardy/Rstudy/data/product_click.log")
names(pdf) <- c("logdate", "product")
pdf <- pdf %>% select(product) %>% group_by(product) %>% summarise(clickcount = n()) %>% arrange(desc(clickcount)) %>% head(1)
pdf <- as.data.frame(pdf)
pdf
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
k3@data[c("C행정구역별_읍면동", "행정구역별_읍면동")]
k3@data[ccco,]
