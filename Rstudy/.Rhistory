str(fruit)
View(fruit)
fruit[1,]
fruit[-1,]
fruit[,2]
fruit[,3] # fruit[,3, drop=F]
fruit[,3, drop=F]
fruit[, c(3,4)]
fruit[3,2]
fruit[3,1]
fruit[,3]
fruit$qty
fruit[[3]]
fruit[3]  # 데이터프레임 형식 유지
str(fruit$qty)
str(fruit[3])
# dataframe exam1
english <- c(90, 80, 60, 70)
math <- c(50, 60, 100, 20)
classnum <- c(1,1,2,2)
df_midterm <- data.frame(
english, math, classnum)
df_midterm <- data.frame(
english, math, classnum)
df_midterm
str(df_midterm)
df_midterm
colnames(df_midterm)
rownames(df_midterm)
names(df_midterm)
mean(df_midterm$english)
mean(df_midterm$math)
df_midterm2 <- data.frame(
c(90, 80, 60, 70),
c(50, 60, 100, 20),
c(1,1,2,2))
df_midterm2
colnames(df_midterm2)
rownames(df_midterm2)
colnames(df_midterm2)
rownames(df_midterm2)
names(df_midterm2)
df_midterm2
df_midterm2 <- data.frame(
영어=c(90, 80, 60, 70),
수학=c(50, 60, 100, 20),
클래스=c(1,1,2,2))
df_midterm2
df_midterm2$영어
df <- data.frame(var1=c(4,3,8),
var2=c(2,6)) # 오류
df_midterm2
df_midterm2$영어
df <- data.frame(var1=c(4,3,8),
var2=c(2,6)) # 오류
df_midterm2
df_midterm2$영어
df <- data.frame(var1=c(4,3,8),
var2=c(2,6)) # 오류
df_midterm2$영어
df <- data.frame(var1=c(4,3,8),
var2=c(2,6)) # 오류
df <- data.frame(var1=c(4,3,8),
var2=c(2,6,1))
str(df)
df$var_sum <- df$var1 + df$var2
df$var_sum
df$var_mean <- df$var_sum/2
df$var_mean
str(df)
df$result <- ifelse(df$var1>df$var2,
"var1이 크다", "var1이 작다")
df$result
str(df)
getwd()
read.csv("data/score.csv")
#csv파일열기
score <- read.csv("data/score.csv")
#csv를 읽을때는 read.csv를 사용한다.
score
str(score)
score$sum <-
score$math+score$english+score$science
score$sum
score$result <- ifelse(score$sum >= 200,
"pass", "fail")
score
summary(score$result)
summary(factor(score$result)) # 팩터로 만든 다음에 summary해야한다.
table(score$result)
summary(factor(score$result)) # 팩터로 만든 다음에 summary해야한다.
score$result = factor(score$result)
str(score)
summary(score)
score$id = as.character(score$id)
score$id
score$class = factor(score$class)
score$class
summary(score)
score$grade<-ifelse(score$sum >= 230,"A",
ifelse(score$sum >= 215,"B",
ifelse(score$sum >=200,"C","D")))
score
# order() 와 sort()
v <- c(10,3,7,4,8)
sort(v)
order(v)
emp <- read.csv(file.choose(),
stringsAsFactors = F)
emp <- read.csv(file.choose(),
stringsAsFactors = F)
emp
str(emp)
emp <- read.csv(file.choose(),
stringsAsFactors = F)
emp <- read.csv(file.choose(),stringsAsFactors = F)
emp
str(emp)
# emp에서 직원 이름
emp$ename
emp[,2]
emp[,"ename"]
emp[,2, drop=FALSE]
emp[,"ename",drop=F]
emp[2]
emp["ename"]
# emp에서 직원 이름
emp$ename
# emp에서 직원이름, 잡, 샐러리
emp[,c(2,3,6)]
emp[,c("ename","job","sal")]
subset(emp,select = c(ename, job, sal))
# emp에서 1,2,3 행 들만
emp[1:3,]
emp[c(1,2,3),]
?head
head(emp)
head(emp, n=1)
# ename이 "KING"인 직원의 모든 정보
emp[9,]
emp$ename=="KING"
emp[c(F,F,F,F,F,F,F,F,T,F,F,F,
F,F,F,F,F,F,F,F),]
emp[emp$ename=="KING",]
emp$ename=="KING"
emp[emp$ename=="KING",]
emp[c(F,F,F,F,F,F,F,F,T,F,F,F,
F,F,F,F,F,F,F,F),]
subset(emp,subset=emp$ename=="KING")
subset(emp,emp$ename=="KING")
# 커미션을 받는 직원들의 모든 정보 출력
emp[!is.na(emp$comm),]
subset(emp,!is.na(emp$comm))
is.na(emp$comm)
view(emp)
view(emp)
subset(emp,!is.na(emp$comm))
view(emp)
View(emp)
subset(emp, select=c("ename","sal"), #select에 추출하고자 하는 열
subset= emp$sal>= 2000)
subset(emp, emp$sal>= 2000,
c("ename","sal"))
emp[emp$sal>=2000,c("ename","sal")]
subset(emp, select=c("ename","sal"), subset=(sal>=2000 & sal<=3000))
emp[emp$sal>=2000 & emp$sal <=3000, c("ename","sal")]
#문제 1
suummary(airquality)
#문제 1
summary(airquality)
str(airquality)
matrix(1:10, rcol=2)
matrix(1:10, ncol=2)
matrix(1:10, ncol=2, byrow=T)
#문제 2
x <- c(1,2,3,4,5)
y <- c(2,4,6,8,10)
c
c
df1
x
y
#문제 2
x <- matrix(1,2,3,4,5, nrow=5)
#문제 2
x <- matrix(1:5, nrow=5)
x
#문제 2
x <- x=matrix(1:5, nrow=5)
y <- matrix(seq(2,10,2),nrow=5)
y
df1 <- cbind(x,y)
df1
#문제 2
x <- matrix(1:5, nrow=5)
y <- matrix(seq(2,10,2),nrow=5)
df1 <- cbind(x,y)
colnames(df1) <- c("x","y")
rownames(df1) <- c(1,2,3,4,5)
df1
#문제3
x <- matrix(1:5, nrow=5)
y <- matrix(letter(1:5),nrow=5)
z <- matrix(6:10,nrow=5)
#문제3
x <- matrix(1:5, nrow=5)
y <- matrix(letters(1:5),nrow=5)
#문제3
x <- matrix(1:5, nrow=5)
y <- matrix(letters[1:5],nrow=5)
z <- matrix(6:10,nrow=5)
df2 <- cbind(x,y,z)
colnames(df2) <- c("col1","col2","col3")
rownames(df2) <- c(1,2,3,4,5)
df2
#문제3
x <- matrix(1:5, nrow=5)
t <- c("a","b","c","d","e")
y <- matrix(t,nrow=5)
z <- matrix(6:10,nrow=5)
df2 <- cbind(x,y,z)
colnames(df2) <- c("col1","col2","col3")
rownames(df2) <- c(1,2,3,4,5)
df2
rm(df2)
#문제3
x <- matrix(1:5, nrow=5)
t <- c("a","b","c","d","e")
y <- matrix(t,nrow=5)
z <- matrix(6:10,nrow=5)
df2 <- cbind(x,y,z)
colnames(df2) <- c("col1","col2","col3")
rownames(df2) <- c(1,2,3,4,5)
df2
rm(df2)
#문제3
x <- matrix(1:5, nrow=5)
t <- c("a","b","c","d","e")
y <- matrix(t,nrow=5)
z <- matrix(6:10,nrow=5)
df2 <- cbind(x,y,z)
colnames(df2) <- c("col1","col2","col3")
rownames(df2) <- c(1,2,3,4,5)
df2
rm(df2)
t <- c(a,b,c,d,e)
t <- c(a,b,c,d,e)
#문제3
x <- matrix(1:5, nrow=5)
t <- c("a","b","c","d","e")
y <- matrix(t,nrow=5)
z <- matrix(6:10,nrow=5)
df2 <- cbind(x,y,z)
colnames(df2) <- c("col1","col2","col3")
rownames(df2) <- c(1,2,3,4,5)
df2
#문제 2
x <- c(1:5)
y <- c(seq(2,10,2))
df1 <- data.frame(x,y)
df1
#문제3
x <- c(1:5)
y <- c("a","b","c","d","e")
z <- c(6:10)
df2 <- data.frame(x,y,z)
df2
#문제4
제품명 <- c("사과","딸기","수박")
가격 <- c(1800,1500,3000)
판매량 <- c(24,38,13)
df3 <- data.frame(제품명,가격,판매량)
df3
rownames(df3) <- NULL
df3
rownames(df3) <- NULL
df3
#문제4
제품명 <- c("사과","딸기","수박")
가격 <- c(1800,1500,3000)
판매량 <- c(24,38,13)
df3 <- data.frame(제품명,가격,판매량)
rownames(df3) <- NULL
df3
df_midterm
str(df_midterm)
colnames(df_midterm)
rownames(df_midterm)
names(df_midterm) # 얘는 colnames랑 동일하다.
mean(df_midterm$english)
mean(df_midterm$math)
df_midterm
df3
df$과일가격평균 <- sum(df$판매량)/3
df$과일가격평균
#문제 5
df$과일가격평균 <- sum(df$가격)/3
df$과일가격평균
#문제 5
df3$과일가격평균 <- sum(df3$가격)/3
df3$과일가격평균
df$var_mean
#문제 5
과일가격평균 <- sum(df3$가격)/3
과일가격평균
판매량평균<- sum(df3$판매량)/3
판매량평균
과일가격평균;판매량평균
df4 <- data.frame(
name = c("Potter", "Elsa", "Gates", "Wendy", "Ben"),
gender = factor(c("M", "F", "M", "F", "M")),
math = c(85, 76, 99, 88, 40))
df4
df4$stat <- c(76, 73, 95, 82, 35)
df4
df4$score <- df4$math + df$stat
df4$score <- df4$math + df4$stat
df4
df4 <- data.frame(
name = c("Potter", "Elsa", "Gates", "Wendy", "Ben"),
gender = factor(c("M", "F", "M", "F", "M")),
math = c(85, 76, 99, 88, 40))
df4
df4$stat <- c(76, 73, 95, 82, 35)
df4$stat
df4$score <- df4$math + df4$stat
df4
df4$grade <-ifelse(df4$score >= 150,"A",
ifelse(df4$score >= 100,"B",
ifelse(df4$score >=70,"C","D")))
df4
#문제 7
str(emp)
#문제 8
emp(3:5,)
#문제 8
emp[3:5,]
emp[emp$ename]
emp[emp$ename]
emp[,emp$ename]
emp[,emp$ename]
emp[,ename]
emp[,emp$ename]
emp[,emp[emp$ename]]
subset(emp,subset=emp$ename=="KING")
subset(emp,emp$ename=="KING")
subset(emp,emp$ename)
subset(emp,subset=emp$ename)
#문제 9
emp[,2]
#문제 9
emp[,"ename"]
#문제 9
emp["ename"]
#문제 10
emp["ename" & "sal"]
#문제 10
emp[,c("ename", "sal")]
str(emp)
#문제 11
emp[,c("ename","sal","job")]
str(emp)
emp
subset(emp,emp$ename=="KING")
subset(c("ename","sal","job"),emp$job=="SALESMAN")
subset(emp,emp$job=="SALESMAN")
subset(emp$ename,emp$job=="SALESMAN")
subset(emp$ename,emp$sal,emp$job,subset=emp$job=="SALESMAN")
subset(emp$ename,emp$sal,emp$job,subset=emp$job=="SALESMAN")
subset(emp,subset=emp$job=="SALESMAN")
#문제 11
subset(emp[,c("ename","sal","job")],subset=emp$job=="SALESMAN")
emp
subset(emp, select=c("ename","sal","deptno"), subset=(sal>=1000 & sal<=3000))
emp[emp$sal>=1000 & emp$sal <=3000, c("ename","sal","deptno")]
#문제 12
subset(emp[,c("ename","sal","deptno")],subset=emp$sal=(sal>=1000 & sal<=3000))
subset(emp, select=c("ename","sal","deptno"), subset=(sal>=1000 & sal<=3000))
emp[emp$sal>=1000 & emp$sal <=3000, c("ename","sal","deptno")]
#문제 13
subset(emp[,c("ename","job","sal")],subset=emp$job!="ANALYST")
#문제 14
subset(emp[,c("ename","job")],subset=(emp$job=="SALESMAN"|emp$job!="ANALYST")
#문제 14
subset(emp[,c("ename","job")],subset=(emp$job=="SALESMAN"|emp$job!="ANALYST"))
#문제 14
subset(emp[,c("ename","job")],subset=emp$job=="SALESMAN"|emp$job!="ANALYST")
#문제 13
subset(emp[,c("ename","job","sal")],subset=emp$job!="ANALYST")
#문제 14
subset(emp[,c("ename","job")],subset=emp$job=="SALESMAN"|emp$job!="ANALYST")
#문제 14
subset(emp[,c("ename","job")],subset=emp$job=="SALESMAN"|emp$job=="ANALYST")
#문제 15
subset(emp[,c("ename","job")],subset=is.na(emp$comm))
#문제 15
subset(emp[,c("ename","sal")],subset=is.na(emp$comm))
#문제 16
subset(emp,subset=sort(emp$sal))
#문제 16
vv <- sort(emp$sal)
vv
subset(emp,subset=vv)
subset(emp,sort(emp$sal))
subset(emp,sort(emp$sal)
subset(emp,sort(emp$sal))
subset(emp,subset=emp$sal==sort(emp$sal))
subset(emp,subset=emp$sal=sort(emp$sal))
subset(emp,subset= sort(emp$sal))
vv
subset(emp,subset= emp$sal= sort(emp$sal))
subset(emp,subset= emp$sal<- sort(emp$sal))
subset(emp,emp$sal<- sort(emp$sal))
subset(emp,emp$sal = sort(emp$sal))
source('C:/hardy/Rstudy/lab_03.R', encoding = 'UTF-8', echo=TRUE)
subset(emp,subset=emp$sal=order(emp$sal))
subset(emp,subset=emp$ename=sort(emp$sal))
emp[emp$sal>=2000,emp]
emp[emp$sal>=2000,c(,)]
emp[emp$sal>=2000,c()]
emp[emp$sal>=2000,c(,)]
emp[emp$sal>=2000,emp[]
emp[emp$sal>=2000,emp[]]
emp[emp$sal>=2000,emp
emp[emp$sal>=2000,emp[,]]
emp[sort(emp$sal),emp[,]]
emp[sort(emp$sal),emp[,]]
emp[sort(emp$sal),]
emp[sort(emp$sal),emp]
emp[sort(emp$sal),emp[,1:8]]
emp[sort(emp$sal),emp[,1:8]]
sort(emp$sal)
#문제 16
vv <- sort(sal)
#문제 16
vv <- order(emp$sal)
vv
subset(emp,subset=emp[,order(emp$sal)])
subset(emp,subset=emp[,order(emp$sal)])
subset(emp,subset=emp[order(emp$sal),])
#문제 16
vv <- order(emp$sal)
vv
subset(emp,subset=emp[vv,])
emp[vv,]
제품명 <- c("사과","딸기","수박",stringAsFactors=F)
가격 <- c(1800,1500,3000)
판매량 <- c(24,38,13)
df3 <- data.frame(제품명,가격,판매량)
제품명 <- c("사과","딸기","수박")
가격 <- c(1800,1500,3000)
판매량 <- c(24,38,13)
df3 <- data.frame(제품명,가격,판매량,stringAsFactors=F)
rownames(df3) <- NULL
rownames(df3) <- NULL
df3
제품명 <- c("사과","딸기","수박")
가격 <- c(1800,1500,3000)
판매량 <- c(24,38,13)
df3 <- data.frame(제품명,가격,판매량,stringsAsFactors=F)
rownames(df3) <- NULL
df3
str(df3)
df4 <- data.frame(
name = c("Potter", "Elsa", "Gates", "Wendy", "Ben"),
gender = factor(c("M", "F", "M", "F", "M")),
math = c(85, 76, 99, 88, 40) ,stringsAsFactors=F)
df4
df4$stat <- c(76, 73, 95, 82, 35)
df4$score <- df4$math + df4$stat
df4$grade <-ifelse(df4$score >= 150,"A",
ifelse(df4$score >= 100,"B",
ifelse(df4$score >=70,"C","D")))
df4
str(df4)
#문제 3
x <- c(1:5)
y <- c("a","b","c","d","e")
z <- c(6:10)
df2 <- data.frame(x,y,z)
df2
#문제 4
제품명 <- c("사과","딸기","수박")
가격 <- c(1800,1500,3000)
판매량 <- c(24,38,13)
df3 <- data.frame(제품명,가격,판매량,stringsAsFactors=F)
df3
rownames(df3) <- NULL
df3
str(df4)
#문제 12
subset(emp, select=c("ename","sal","deptno"), subset=(sal>=1000 & sal<=3000))
emp[emp$sal>=1000 & emp$sal <=3000, c("ename","sal","deptno")]
#비교
sort(emp$sal)
order(emp$sal)
###############################################
y <- c(0,25,50,75,100)
z <- c(50, 50, 50, 50,50)
y == z
y != z
y > z
y < z
y >= z
y <= z
y == 50 # c(50, 50, 50, 50, 50)
y > 50
num1 <- 11 # c(11)
num2 <- 3  # c(3)
num1 / num2
num1 %% num2
num1 %/% num2
