oddSum = 0,
evenSum = 0
)
if(is.null(num)){
return()
}
else if(!is.vector(num)){
stop("벡터만 처리 가능!!")
return()
}
else if(is.vector(num)){
cnt <- 0
for (data in num){
if(is.na(data)){
warning("NA를 최저값으로 변경하여 처리함")
data <- min(!is.na(num))
}
cnt <- cnt + 1
if( cnt %% 2 == 0){
result$evenSum <- result$evenSum + data
}
else if(cnt %% 2 == 1){
result$oddSum <- result$oddSum + data
}
}
return(result)
}
}
mySum()
#문제 4
mySum <-function(num){
result <- list(
oddSum = 0,
evenSum = 0
)
if(!is.vector(num)){
stop("벡터만 처리 가능!!")
return()
}
else if(is.vector(num)){
cnt <- 0
for (data in num){
if(is.null(data)){
return()
}
if(is.na(data)){
warning("NA를 최저값으로 변경하여 처리함")
data <- min(!is.na(num))
}
cnt <- cnt + 1
if( cnt %% 2 == 0){
result$evenSum <- result$evenSum + data
}
else if(cnt %% 2 == 1){
result$oddSum <- result$oddSum + data
}
}
return(result)
}
}
mySum()
mySum()
#문제 4
mySum <-function(num){
result <- list(
oddSum = 0,
evenSum = 0
)
if(is.null(num)){
return()
}
else if(!is.vector(num)){
stop("벡터만 처리 가능!!")
return()
}
else if(is.vector(num)){
cnt <- 0
for (data in num){
if(is.na(data)){
warning("NA를 최저값으로 변경하여 처리함")
data <- min(!is.na(num))
}
cnt <- cnt + 1
if( cnt %% 2 == 0){
result$evenSum <- result$evenSum + data
}
else if(cnt %% 2 == 1){
result$oddSum <- result$oddSum + data
}
}
return(result)
}
}
mySum()
#문제 4
mySum <-function(num){
result <- list(
oddSum = 0,
evenSum = 0
)
if(is.null(num)){
return()
}else{
if(!is.vector(num)){
stop("벡터만 처리 가능!!")
return()
}
else if(is.vector(num)){
cnt <- 0
for (data in num){
if(is.na(data)){
warning("NA를 최저값으로 변경하여 처리함")
data <- min(!is.na(num))
}
cnt <- cnt + 1
if( cnt %% 2 == 0){
result$evenSum <- result$evenSum + data
}
else if(cnt %% 2 == 1){
result$oddSum <- result$oddSum + data
}
}
return(result)
}
}
}
mySum()
mySum(array(1,2))
mySum(c(1))
mySum(c(1,2,3))
mySum(c(1,2,3,4))
mySum(c(1,5,NA))
mySum(c(1,5,9,10))    # 짝=15 / 홀 = 10
mySum()
mySum(NULL)
sample(1,45,6)
sample(1:45,6)
#문제 5
myExpr <-function(func){
if(!is.function(func)){
stop("수행 안할꺼임!!")
return()
}
else{
sample(1:45,6)
result <- func(sample)
return(result)
}
}
myExpr(func1)
myExpr(func2)
myExpr(func1)
myExpr(func1())
myExpr(func1())
myExpr(func1
myExpr(func1)
myExpr(func1)
myExpr(func1)
#문제 5
myExpr <-function(func){
if(!is.function(func)){
stop("수행 안할꺼임!!")
return()
}
else{
result <- sample(1:45,6)
return(result)
}
}
myExpr()
myExpr(1)
myExpr(func1)
myExpr(func1)
myExpr(func1)
myExpr(func1)
myExpr(func1)
#문제 6
createVector1 <-function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else if(any(is.na(num) & is.na(p) & is.na(bool) )){
return(NA)
}
else
result <- c(num, p, bool)
return(result)
}
createVector1(1,"가",T)
createVector1(1,"가",NA)
createVector1(NULL,NULL,NULL)
createVector1(NULL)
#문제 6
createVector1 <-function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else if(any(is.na(num) & is.na(p) & is.na(bool) )){
return()
}
else
result <- c(num, p, bool)
return(result)
}
createVector1(1,"가",T)
createVector1(1,"가",NA)
createVector1(NULL,NULL,NULL)
#문제 6
createVector1 <-function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else if(any(is.na(num,p,bool))){
return()
}
else
result <- c(num, p, bool)
return(result)
}
createVector1(1,"가",T)
createVector1(1,"가",NA)
createVector1(NULL,NULL,NULL)
#문제 6
createVector1 <-function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else if(any(is.na(num) & is.na(p) & is.na(bool) )){
return(NA)
}
else
result <- c(num, p, bool)
return(result)
}
createVector1(1,"가",T)
createVector1(1,"가",NA)
createVector1(NULL,NULL,NULL)
#문제 6
createVector1 <-function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else if(any(is.na(num) & is.na(p) & is.na(bool) )){
result <- NA
return(result)
}
else
result <- c(num, p, bool)
return(result)
}
createVector1(1,"가",T)
createVector1(1,"가",NA)
createVector1(NULL,NULL,NULL)
#문제 6
createVector1 <-function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else if(any(is.na(num) & is.na(p) & is.na(bool) )){
num <- NA
p <- NA
bool <- NA
return()
}
else
result <- c(num, p, bool)
return(result)
}
createVector1(1,"가",T)
createVector1(1,"가",NA)
createVector1(NULL,NULL,NULL)
#문제 6
createVector1 <-function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else if(any(is.na(num) & is.na(p) & is.na(bool) )){
result <- c(NA)
return(result)
}
else
result <- c(num, p, bool)
return(result)
}
createVector1(1,"가",T)
createVector1(1,"가",NA)
createVector1(NULL,NULL,NULL)
#문제 6
createVector1 <-function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else if(any(is.na(num) | is.na(p) | is.na(bool) )){
result <- c(NA)
return(result)
}
else
result <- c(num, p, bool)
return(result)
}
createVector1(1,"가",T)
createVector1(1,"가",NA)
createVector1(NULL,NULL,NULL)
#문제 7
createVecotr2 <- function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else{
result <- list(
num = c(0),
p = c(""),
bool = c(0),
)
result$num <- result$num + num
result$p <- result$p + p
result$bool <- result$bool + bool
}
return(result)
}
createVector2(1,"가",T)
#문제 7
createVecotor2 <- function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else{
result <- list(
num = c(0),
p = c(""),
bool = c(0),
)
result$num <- result$num + num
result$p <- result$p + p
result$bool <- result$bool + bool
}
return(result)
}
createVector2(1,"가",T)
#문제 7
createVector2 <- function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else{
result <- list(
num = c(0),
p = c(""),
bool = c(0),
)
result$num <- result$num + num
result$p <- result$p + p
result$bool <- result$bool + bool
}
return(result)
}
createVector2(1,"가",T)
#문제 7
createVector2 <- function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else{
result <- list(
num = c(0),
p = c(""),
bool = c(0)
)
result$num <- result$num + num
result$p <- result$p + p
result$bool <- result$bool + bool
}
return(result)
}
createVector2(1,"가",T)
#문제 7
createVector2 <- function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else{
result <- list(
num = c(0),
p = c(""),
bool = c(0)
)
result$num <- result$num + num
result$p <- paste(result$p, p)
result$bool <- result$bool + bool
}
return(result)
}
createVector2(1,"가",T)
#문제 7
createVector2 <- function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else{
result <- list(
num = c(0),
p = c(""),
bool = c(0)
)
result$num <- result$num + num
result$p <- paste(result$p, p)
result$bool <- paste(result$bool, bool)
}
return(result)
}
createVector2(1,"가",T)
createVector2(1,"가",NA)
createVector2(NULL,NULL,NULL)
createVector2(1,"가",NA)
createVector2(1,"가",NA)
#문제 7
createVector2 <- function(num, p, bool){
if(all(is.null(num) & is.null(p) & is.null(bool))){
return()
}
else{
result <- list(
num = c(0),
p = c(""),
bool = c()
)
result$num <- result$num + num
result$p <- paste(result$p, p)
result$bool <- paste(result$bool, bool)
}
return(result)
}
createVector2(1,"가",T)
createVector2(1,"가",NA)
createVector2(NULL,NULL,NULL)
#문제 8
testdata1 <- scan("data/iotest1.txt", what="",encoding="UTF-8")
testdata1
cat("오름차순",sort(testdata1),"\n")
cat("오름차순",sort(as.numeric(testdata1)),"\n")
?sort
cat("내림차순",sort(as.numeric(testdata1),decreasing = T),"\n")
cat("합",sㅕㅡ(as.numeric(testdata1)),"\n")
cat("합",sum(as.numeric(testdata1)),"\n")
cat("평균",mean(as.numeric(testdata1)),"\n")
#문제 9
testdata2 <- scan("data/iotest2.txt", what="",encoding="UTF-8")
testdata2
table(testdata2)
freq <- table(testdata2)
freq
which.max(freq)
which.max(freq)
cat("가장 많이 등장한 단어는",which.max(freq),"입니다.","\n")
names(which.max(freq))
cat("가장 많이 등장한 단어는",names(which.max(freq)),"입니다.","\n")
#문제 5
myExpr <-function(func){
if(!is.function(func)){
stop("수행 안할꺼임!!")
return()
}
else{
result <- sample(1:45,6)
return(func(result))
}
}
myExpr(mean)
myExpr(mean)
myExpr(mean)
#문제 6
createVector1 <-function(...){
data <- c(...)
result <- NULL
if(length(data)==0){
result <- NULL
}
else if(any(is.na(data))){
result <- NA
}
else
result <- data
return(result)
}
createVector1(1,"가",T)
createVector1(1,"가",NA)
createVector1(NULL,NULL,NULL)
#문제 7
createVector2 <- function(...){
args <- list(...)
nvec <- NULL
cvec <- NULL
lvec <- NULL
for (data in args){
if(is.numeric(data)){
nvec <- c(nvec,data)
}else if(is.character(data)){
cvec <- c(cvec,data)
}else if(is.logical(data)){
lvec <- c(lvec,data)
}
}
return(list(nvec,cvec,lvec))
}
createVector2(1,"가",T)
createVector2(1,"가",NA)
createVector2(NULL,NULL,NULL)
createVector2(1,"가",NA)
createVector2(1,"가",T, 2, 10, "나")
freq <- table(testdata2)
freq
which.max(freq)
